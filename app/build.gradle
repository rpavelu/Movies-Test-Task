plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id "com.google.devtools.ksp" version "1.7.20-1.0.7"
}

// Store API key
def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.ratushny.moviestest'
    compileSdk 33

    defaultConfig {
        applicationId "com.ratushny.moviestest"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        buildConfigField "String", 'API_KEY', apikeyProperties['API_KEY']
        buildConfigField "String", 'MOVIES_LIST_URL', '"https://api.themoviedb.org/"'
        buildConfigField "String", 'MOVIES_LIST_API_VER_3', '"3/"'
        buildConfigField "String", 'MOVIE_IMAGE_W500_URL', '"https://image.tmdb.org/t/p/w500"'
        buildConfigField "String", 'MOVIE_IMAGE_ORIGINAL_URL', '"https://image.tmdb.org/t/p/original"'
    }

    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        }

        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            splits.abi.enable = true
            splits.density.enable = true
            splits.language.enable = false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true
        checkAllWarnings true
        disable 'AllowBackup'
        disable 'ContentDescription'
        disable 'InvalidPackage'
        disable 'IconMissingDensityFolder'
        disable 'RtlCompat', 'RtlEnabled', 'RtlHardcoded', 'RtlSymmetry'
        disable 'MissingPrefix'
        disable 'MissingRegistered'
        disable 'LockedOrientationActivity'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // Core components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.14.0'

    // Fragment navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    // Material
    implementation 'com.google.android.material:material:1.7.0'

    // Koin
    implementation "io.insert-koin:koin-core:3.2.0"
    implementation "io.insert-koin:koin-android:3.2.0"
}